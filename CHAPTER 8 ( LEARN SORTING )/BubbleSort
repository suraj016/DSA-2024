Bubble Sort Algorithm:
Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements,
and swaps them if they are in the wrong order. The process is repeated until the list is sorted.


T.C = O(n^2)









class Solution {
    // Function to perform Bubble Sort
    public void bubbleSort(int[] nums) {
        int n = nums.length; // Get the length of the array
        
        // Outer loop for the number of passes (n-1 passes required)
        for (int i = 0; i < n - 1; i++) {
            
            // Inner loop for comparing adjacent elements
            // We reduce the range of inner loop with each pass because after each pass,
            // the largest element is already "bubbled" to the end.
            for (int j = 0; j < n - 1 - i; j++) {
                
                // Compare adjacent elements (nums[j] and nums[j + 1])
                if (nums[j] > nums[j + 1]) {
                    // If the current element is greater than the next element, swap them
                    int temp = nums[j];       // Store the current element in a temporary variable
                    nums[j] = nums[j + 1];    // Assign the next element to the current element's position
                    nums[j + 1] = temp;       // Place the original current element in the next position
                }
            }
        }
    }
}
